name: Test Server Connection 1

env:
  REGISTRY: cr.yandex
  IMAGE_NAME: clone-vk
  #SSH_USER: admin
  CONTAINER_PORT: 5000
  HOST_PORT: 5002  # Проверьте, свободен ли этот порт на сервере!

on:
  push:
    branches: [ main ]

jobs:
  test-connection:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup SSH key
        run: |
          echo '${{ secrets.YC_SA_KEY }}' > key.json
          chmod 600 key.json

      - name: Install YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i
          /home/runner/yandex-cloud/bin/yc config profile create github-actions
          /home/runner/yandex-cloud/bin/yc config set service-account-key key.json
          /home/runner/yandex-cloud/bin/yc config set folder-id b1gbg64nvnbues4n0i9k
          /home/runner/yandex-cloud/bin/yc config set cloud-id ${{ secrets.REGISTRY_ID }}

      - name: Login to YCR
        run: |
          IAM_TOKEN=$(/home/runner/yandex-cloud/bin/yc iam create-token)
          echo "$IAM_TOKEN" | docker login --username iam --password-stdin cr.yandex
        
      - name: Build and Push Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ secrets.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.REGISTRY }}/${{ secrets.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest

      - name: SSH Deployment
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          
          # Передаем IAM токен с GitHub runner на сервер
          IAM_TOKEN=$(/home/runner/yandex-cloud/bin/yc iam create-token)
          
          ssh -i ~/.ssh/deploy_key \
              -p ${{ secrets.SSH_PORT }} \
              ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
              "echo '$IAM_TOKEN' | docker login --username iam --password-stdin cr.yandex && \
              echo 'Stopping and removing old container...' && \
              docker stop ${{ env.IMAGE_NAME }} 2>/dev/null || true && \
              docker rm ${{ env.IMAGE_NAME }} 2>/dev/null || true && \
              echo 'Pulling new image...' && \
              docker pull ${{ env.REGISTRY }}/${{ secrets.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest && \
              echo 'Starting new container...' && \
              docker run -d \
                --name ${{ env.IMAGE_NAME }} \
                --restart unless-stopped \
                -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} \
                ${{ env.REGISTRY }}/${{ secrets.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest && \
              echo 'Deployment completed successfully!'"