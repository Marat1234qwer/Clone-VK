name: Test Server Connection 1

env:
  IMAGE_NAME: clone-vk
  CONTAINER_PORT: 5000
  HOST_PORT: 5002

on:
  push:
    branches: [ main ]

jobs:
  test-connection:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest .
        
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Transfer Docker image to server
        run: |
          docker save ${{ env.IMAGE_NAME }}:latest > image.tar
          scp -i ~/.ssh/deploy_key \
              -P ${{ secrets.SSH_PORT }} \
              image.tar \
              ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/tmp/image.tar

      - name: Deploy on server
        run: |
          ssh -i ~/.ssh/deploy_key \
              -p ${{ secrets.SSH_PORT }} \
              ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
              cat > /app/.env << EOL
              FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}
              DB_HOST=${{ secrets.DB_HOST }}
              DB_NAME=${{ secrets.DB_NAME }}
              DB_USER=${{ secrets.DB_USER }}
              DB_PASSWORD=${{ secrets.DB_PASSWORD }}
              DB_PORT=${{ secrets.DB_PORT }}
              DB_SSLMODE=${{ secrets.DB_SSLMODE }}
              EOL
          set -e  # Выход при ошибке
          
          echo "Loading Docker image..."
          docker load -i /tmp/image.tar
          
          echo "Stopping and removing old container..."
          docker stop clone-vk 2>/dev/null || true
          docker rm clone-vk 2>/dev/null || true
          
          echo "Starting new container..."
          docker run -d \
            --name clone-vk \
            --restart unless-stopped \
            -p 5002:5000 \
            --env-file /app/.env \
            clone-vk:latest
          
          echo "Cleaning up..."
          rm -f /tmp/image.tar
          
          echo "Deployment completed successfully!"
          EOF

      - name: Cleanup local files
        run: |
          rm -f image.tar
          rm -f ~/.ssh/deploy_key