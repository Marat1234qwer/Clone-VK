name: Test Server Connection 1

env:
  REGISTRY: cr.yandex
  REGISTRY_ID: crpsad4gf09obkkcv8ei
  IMAGE_NAME: clone-vk
  SERVER_IP: 37.143.10.40
  SSH_PORT: 2222
  SSH_USER: admin
  CONTAINER_PORT: 5000
  HOST_PORT: 5002

on:
  workflow_dispatch:

jobs:
  test-connection:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup SSH key
        run: |
          # Создаем файл ключа и записываем в него содержимое секрета
          echo '${{ secrets.YC_SA_KEY }}' > key.json  # Используем одинарные кавычки!
          
          # Проверяем, что файл создан (опционально)
          # ls -la key.json
          # cat key.json | jq empty  # Проверка валидности JSON (если установлен jq)

      - name: Install YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i
          /home/runner/yandex-cloud/bin/yc --version
          /home/runner/yandex-cloud/bin/yc config profile create github-actions
          /home/runner/yandex-cloud/bin/yc config set service-account-key key.json
          /home/runner/yandex-cloud/bin/yc config set folder-id b1gbg64nvnbues4n0i9k
          /home/runner/yandex-cloud/bin/yc config set compute-default-zone ru-central1-a
          /home/runner/yandex-cloud/bin/yc config set cloud-id ${{ secrets.REGISTRY_ID }}

          /home/runner/yandex-cloud/bin/yc config list  # Проверка настроек (опционально)

      - name: Login to YCR
        run: |
          IAM_TOKEN=$(/home/runner/yandex-cloud/bin/yc iam create-token --profile=github-actions)
          
          # Логин в Container Registry
          echo "$IAM_TOKEN" | docker login \
            --username iam \
            --password-stdin \
            cr.yandex
        
      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ secrets.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest .
          docker image inspect ${{ env.REGISTRY }}/${{ secrets.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ secrets.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest
